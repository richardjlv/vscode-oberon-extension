(* Binary Search program *)
MODULE BinarySearch;
IMPORT Out;

PROCEDURE BinarySearch(arr: ARRAY OF INTEGER; key: INTEGER): INTEGER;
VAR
  low, high, mid: INTEGER;
BEGIN
  low := 0;
  high := LEN(arr) - 1;

  WHILE low <= high DO
    mid := (low + high) DIV 2;

    IF arr[mid] = key THEN
      RETURN mid;
    ELSIF arr[mid] < key THEN
      low := mid + 1;
    ELSE
      high := mid - 1;
    END;
  END;

  RETURN -1;  (* Key not found *)
END BinarySearch;

PROCEDURE Run;
VAR
  arr: ARRAY 10 OF INTEGER;
  key, index: INTEGER;
  i: INTEGER;
BEGIN
  FOR i := 0 TO LEN(arr) - 1 DO
    arr[i] := i;
  END;

  key := 7;
  index := BinarySearch(arr, key);

  Out.String("Array: ");
  FOR i := 0 TO LEN(arr) - 1 DO
    Out.Int(arr[i], 0);
    Out.String(" ");
  END;
  Out.Ln;

  IF index >= 0 THEN
    Out.String("Key ");
    Out.Int(key, 0);
    Out.String(" found at index ");
    Out.Int(index, 0);
    Out.Ln;
  ELSE
    Out.String("Key ");
    Out.Int(key, 0);
    Out.String(" not found");
    Out.Ln;
  END;
END Run;

BEGIN
  Run;
END BinarySearch.
